#jdbcx
spring.datasource.aftermarket.url=jdbc:sqlserver://172.20.4.104:1433;DatabaseName=AfterMarket
spring.datasource.aftermarket.username=sa
spring.datasource.aftermarket.password=sa@hsc2017
spring.datasource.aftermarket.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.newscenter.url=jdbc:sqlserver://192.168.15.17:1433;DatabaseName=NewsCenter
spring.datasource.newscenter.username=sa
spring.datasource.newscenter.password=sa
spring.datasource.newscenter.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#JPA
spring.datasource.url=jdbc:sqlserver://172.20.4.104:1433;DatabaseName=AfterMarket
spring.datasource.username=sa
spring.datasource.password=sa@hsc2017
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.datasource.continue-on-error=false
#sqlserver nvarchar dialect
#spring.jpa.properties.hibernate.dialect=com.bitauto.ep.fx.webapi.configuration.SqlServer2008Dialect
#spring.jpa.show-sql= true
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
spring.datasource.druid.maxWait=60000
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.filters=stat,wall,log4j
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#spring.datasource.useGlobalDataSourceStat=true
spring.datasource.druid.filter.log4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.log4j.statement-close-after-log-enabled=false
#druid StatViewServlet\u76D1\u63A7\u914D\u7F6E
#spring.datasource.druid.stat-view-servlet.enabled= true
#spring.datasource.druid.stat-view-servlet.url-pattern= /druid/*
#spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
#spring.datasource.druid.stat-view-servlet.allow=192.168.1.110,127.0.0.1
#spring.datasource.druid.stat-view-servlet.deny=192.168.16.111
#spring.datasource.druid.aop-patterns=com.xyy.service
com.bitauto.ep.fx.rediskeyspace=Service:55:AfterMarket
spring.redis.password=
spring.redis.cluster.nodes=192.168.87.55:6379,192.168.87.56:6379
spring.redis.cluster.timeout=50
spring.redis.cluster.max-redirects=3
#spring.redis.hostName=172.20.15.27
#spring.redis.port=6379
#spring.redis.timeout=5000
#spring.redis.pool.maxActive=8
#spring.redis.pool.maxWait=-1
#spring.redis.pool.maxIdle=8
#spring.redis.pool.minIdle=0
#外部接口地址
api.easypass.price.hotcs=http://frontapi.easypass.cn/webapi/price/hotcs
api.easypass.new.car=http://api.easypass.cn/msmapi/Price/Get/
# 卡卷统计接口
api.aftermarket.coupon.statistics=http://aftermarket.coupon.api.cn/api/CouponStatistics/GetStatistics
api.aftermarket.coupon.appkey=A84F868B-81CA-4357-9BBE-0C808D2B3D07
api.aftermarket.coupon.sign=AEF84EB7EFCE40E7B53D2E8A97005A74
api.aftermarket.coupon.interfacecode=YCCSP00001
#第三方平台
wechat.open.componentAppId:wx9ce75a7fe6de03af
wechat.open.componentSecret:0c79e1fa963cd80cc0be99b20a18faeb
wechat.open.componentToken:yichehsc
wechat.open.componentAesKey:6a01fe745b5deab42242738627cd9654wx7f1ed0eb5

# RabbitMQ 配置 -- begin
bitauto.ep.sendtowx.mq.exchange=Ex_AfterMarket_SendToWx
bitauto.ep.sendtowx.mq.routingkey=Rk_AfterMarket_SendToWx
bitauto.ep.home.statistics.mq.exchange=Ex_AfterMarket_Home_Statistics
bitauto.ep.home.statistics.mq.routingkey=Rk_Home_Statistics
spring.rabbitmq.username=EP.Front.User
spring.rabbitmq.password=123456
spring.rabbitmq.host=192.168.87.13
spring.rabbitmq.virtual-host=Ep.FrontEnd
#虚拟空间地址
#spring.rabbitmq.virtual-host= EP.Partner
spring.rabbitmq.port=5672
#配置发布消息确认回调
spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.listener.simple.prefetch=1
utils.common.platDomain.yicheDealer=https://dealer.bitauto.com
api.aftermarket.weixin.qrcode=http://weixintong.easypass.cn/Common/UploadImg