#jdbcx
spring.datasource.aftermarket.url=jdbc:sqlserver://172.17.10.138:1433;DatabaseName=AfterMarket
spring.datasource.aftermarket.username=AfterMarket_Rw
spring.datasource.aftermarket.password=BA26835D-4211-4AEF-A8C6-5FA3B826F05B
spring.datasource.aftermarket.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

spring.datasource.newscenter.url=jdbc:sqlserver://172.17.1.60:1433;DatabaseName=NewsCenter
spring.datasource.newscenter.username=NewsCenter_rw
spring.datasource.newscenter.password=0D814588-AF3B-495E-939E-2BA12E878988
spring.datasource.newscenter.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
#JPA
spring.datasource.url=jdbc:sqlserver://172.17.10.138:1433;DatabaseName=AfterMarket
spring.datasource.username=AfterMarket_Rw
spring.datasource.password=BA26835D-4211-4AEF-A8C6-5FA3B826F05B
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.datasource.continue-on-error=false

spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
spring.datasource.druid.maxWait=60000
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.filters=stat,wall,log4j
spring.datasource.druid.filter.log4j.statement-create-after-log-enabled=false
spring.datasource.druid.filter.log4j.statement-close-after-log-enabled=false
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin

#redis
com.bitauto.ep.fx.rediskeyspace=Service:AfterMarket
spring.redis.password=
spring.redis.cluster.nodes=172.17.6.69:7001,172.17.6.70:7002,172.17.6.71:7003,172.17.6.72:7004,172.17.6.73:7005,172.17.6.74:7006,172.17.6.134:7007,172.17.6.135:7008
spring.redis.cluster.timeout=5000
spring.redis.cluster.max-redirects=3

#第三方平台
wechat.open.componentAppId: wx329213b2e6904971
wechat.open.componentSecret: 0c79e1fa963cd80cc0be99b20a18faeb
wechat.open.componentToken: epweixintong
wechat.open.componentAesKey: 0C3F306B4C3244098978D450EFD17705979947B9933

# RabbitMQ 配置 -- begin
bitauto.ep.sendtowx.mq.exchange=Ex_AfterMarket_SendToWx
bitauto.ep.sendtowx.mq.routingkey=Rk_AfterMarket_SendToWx
bitauto.ep.home.statistics.mq.exchange=Ex_AfterMarket_Home_Statistics
bitauto.ep.home.statistics.mq.routingkey=Rk_Home_Statistics
spring.rabbitmq.username= EP.IM.User
spring.rabbitmq.password= 1qazXSW@
spring.rabbitmq.host= 172.17.4.128
spring.rabbitmq.virtual-host= EP.Partner
spring.rabbitmq.port=56720
spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.listener.simple.prefetch = 1

#外部接口
api.easypass.price.hotcs=http://inner.frontapi.easypass.cn/vrfapiv3/price/hotcs
api.easypass.new.car=http://api.easypass.cn/msmapi/Price/Get/
api.aftermarket.coupon.statistics=http://aftermarket.yichehuoban.cn/Coupon/api/CouponStatistics/GetStatistics
api.aftermarket.coupon.appkey=A84F868B-81CA-4357-9BBE-0C808D2B3D07
api.aftermarket.coupon.sign=AEF84EB7EFCE40E7B53D2E8A97005A74
api.aftermarket.coupon.interfacecode=YCCSP00001
utils.common.platDomain.yicheDealer=https://dealer.bitauto.com
api.aftermarket.weixin.qrcode=http://weixintong.easypass.cn/Common/UploadImg

#解决windows下运行时无法识别主机名的问题
spring.boot.admin.client.prefer-ip=true
#是否启用springbootAdmin客户端，默认为true；
spring.boot.admin.client.enabled=true
#要注册的server端的url地址。如果要同时在多个server端口注册，则用逗号分隔各个server端的url地址；
spring.boot.admin.url=http://jcenter-main.easypass.cn/service-admin
spring.config=hello12221